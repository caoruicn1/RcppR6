pair1_sum:
  name_cpp: "examples::sum<T>"
  templates:
    parameters: T
    class: pair1
  args: [obj: "examples::pair1<T>"]
  return_type: T

make_pair1:
  name_cpp: "examples::make_pair1<T>"
  templates:
    parameters: T
    class: pair1
  args: [a: "T", b: "T"]
  return_type: "examples::pair1<T>"

combine:
  name_cpp: "examples::combine<T>"
  templates:
    parameters: T
    class: pair1
    infer_type: implicit
  args: [a: "const examples::pair1<T>&", b: "const examples::pair1<T>&"]
  return_type: "examples::pair1<T>"
