# Add class definitions here.  File follows YAML format, and
# documentation will become available on the rcppr6 website.

# Writing this, it's apparent that extra levels of indenting are going
# to be likely and very difficult to troubleshoot.  Probably going to
# need some validation tools here.  That's not that horrible to do,
# and we can just dump that validation code into the part that reads
# things, or run it separately.
#
# But stress test with things like adding extra '-' in front of (say)
# methods, or method names.
Uniform:
  namespace: examples
  constructor:
    roxygen: |
      Uniform distribution
      @param min Lower bound of the distribution
      @param max Upper bound of the distribution
      @export
    args: # or as 'args: [min: double, max:double]'
      - min: double
      - max: double
  methods:
    draw:
      args: [n: int]
      return_type: Rcpp::NumericVector
    range:
      return_type: double
      method_cpp: examples::uniform_range
      member: false
  active:
    # the methods_cpp here will actually be required.  If it's a
    # single element then this is read-only.  If it's a two element
    # list, then the second is the 'set' method.
    the_min:
      type: double
      method_cpp: [get_min, set_min]
      access: member
    the_max:
      type: double
      method_cpp: ["examples::uniform_get_max", "examples::uniform_set_max"]
      access: free
    u:
      type: Rcpp::NumericVector
      method_cpp: examples::draw1
      access: free
    min: {type: double, access: field}
    max: {type: double, access: field}

## TODO: all method_cpp becomes name_cpp, I think.
## TODO: member: t/f -> access, with default = member.
