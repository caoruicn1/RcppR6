mystruct:
  forward_declare: struct
  name_cpp: "examples::mystruct"
  roxygen: |
    A test struct
    @param ...,values Values to initialise the struct with (either as
    variadic arguments, or as a list, but not both).
    @export
  list:
    - a_bool: bool
    - an_int: int
    - a_real_number: double
    - a_string: "std::string"

validated:
  forward_declare: struct
  name_cpp: "examples::validated"
  list:
    - n_elements: int
    - list: "std::vector<double>"
  validator:
    name_cpp: validate
    type: member

triple1:
  name_cpp: "examples::triple1<T>"
  templates:
    parameters: T
    concrete:
      - int
      - double
      - [string: "std::string"]
  list:
    - first: T
    - second: T
    - third: T
