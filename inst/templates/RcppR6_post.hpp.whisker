// Generated by RcppR6 ({{{RcppR6.version}}}): do not edit by hand
#ifndef _{{{package.NAME}}}_RCPPR6_POST_HPP_
#define _{{{package.NAME}}}_RCPPR6_POST_HPP_

#include <Rcpp.h>
#include <{{{package.name}}}/RcppR6_support.hpp>

namespace {{{package.name}}} {
namespace RcppR6 {
namespace traits {
{{{package.traits}}}
}
}
}

namespace Rcpp {
template <typename T>
SEXP wrap(const {{{package.name}}}::RcppR6::RcppR6<T>& x) {
  return x.to_R6();
}

namespace traits {
template <typename T>
class Exporter<{{{package.name}}}::RcppR6::RcppR6<T> > {
public:
  Exporter(SEXP x) : obj({{{package.name}}}::RcppR6::RcppR6<T>(x)) {}
  inline {{{package.name}}}::RcppR6::RcppR6<T> get() { return obj; }
private:
  {{{package.name}}}::RcppR6::RcppR6<T> obj;
};
}

{{{package.rcpp_definitions}}}
}

#endif
